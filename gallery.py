#! /usr/bin/python
import os
from PIL import Image
import piexif

def rotate():
    pics = '['
    files = os.listdir()
    for fname in files:
        if ((fname[-3:] == "JPG") or (fname[-3:] == "jpg")):
            pics += '"' + fname + '",'
            img = Image.open(fname)
            # import pdb; pdb.set_trace()
            ex = piexif.load(img.info["exif"])
            if ex:
                orientation = ex["0th"][274]
                print(fname, "  ", orientation)
                if (orientation != 1):
                    if (orientation == 8):
                        correction = 90
                    if (orientation == 6):
                        correction = -90
                    if (orientation == 3):
                        correction = 180
                    ex["0th"][274] = 1
                    img.rotate(correction).save(fname, "jpeg", exif = piexif.dump(ex))
    return pics[:-1] + ']'

def write_css():
    out = open("style.css", "w")
    out.write('html,body {\n')
    out.write('    margin: 0;\n')
    out.write('    padding: 0;\n')
    out.write('}\n')
    out.write('.button {\n')
    out.write('    width: 64px;\n')
    out.write('    height: 45px;\n')
    out.write('    bottom: 0;\n')
    out.write('    position: absolute;\n')
    out.write('}\n')
    out.write('#forward {\n')
    out.write('    right: 0px;\n')
    out.write('    cursor: pointer;\n')
    out.write('}\n')
    out.write('#back {\n')
    out.write('    right: 75px;\n')
    out.write('}\n')
    out.write('.photo {\n')
    out.write('    max-width: 100%;\n')
    out.write('    max-height: 100%;\n')
    out.write('}\n')
    out.write('.whole_container {\n')
    out.write('    position: absolute;\n')
    out.write('    height: 100%;\n')
    out.write('    width: 100%;\n')
    out.write('}\n')
    out.write('.navigation {\n')
    out.write('    text-align: center;\n')
    out.write('    position: absolute;\n')
    out.write('    bottom: 0;\n')
    out.write('    width: 100%;\n')
    out.write('}\n')
    out.write('img {\n')
    out.write('    orientation: portrait;\n')
    out.write('}\n')
    out.write('path:hover {\n')
    out.write('    opacity: 0.5;\n')
    out.write('}\n')
    out.write('#backward_arrow{\n')
    out.write('    opacity: 0.2;\n')
    out.write('}\n')
    out.write('.photo_container {\n')
    out.write('    position: absolute;\n')
    out.write('    bottom: 50px;\n')
    out.write('    background-size: contain;\n')
    out.write('    background-repeat: no-repeat;\n')
    out.write('    background-position: center;\n')
    out.write('    height: 100%;\n')
    out.write('    width: 100%;\n')
    out.write('}\n')
    out.close()

def write_js(pics):
    out = open("script.js", "w")
    out.write('window.onload = function () {\n')
    out.write('    var el_back = document.getElementById("back");\n')
    out.write('    var el_forward = document.getElementById("forward");\n')
    out.write('    var el_container = document.getElementsByClassName("photo_container")[0];\n')
    out.write('    var el_forward_arrow = document.getElementById("forward_arrow");\n')
    out.write('    var el_backward_arrow = document.getElementById("backward_arrow");\n')
    out.write('    var forward_disabled = false;\n')
    out.write('    var backward_disabled = true;\n')
    out.write('    el_container.style.backgroundImage = "url(" + pics[0] + ")";\n')
    out.write('    el_back.addEventListener("click", function () {\n')
    out.write('        if (backward_disabled)\n')
    out.write('            return;\n')
    out.write('        pics_index -= 1;\n')
    out.write('        el_container.style.backgroundImage = "url(" + pics[pics_index] + ")";\n')
    out.write('        if (0 == pics_index) {\n')
    out.write('            backward_disabled = true;\n')
    out.write('            el_backward_arrow.style.opacity = "0.2";\n')
    out.write('            el_back.style.cursor = "default";\n')
    out.write('        }\n')
    out.write('        if (forward_disabled) {\n')
    out.write('            forward_disabled = false;\n')
    out.write('            el_forward_arrow.style.opacity = "1.0";\n')
    out.write('            el_forward.style.cursor = "pointer";\n')
    out.write('        }\n')
    out.write('    }, false);\n')
    out.write('    el_forward.addEventListener("click", function () {\n')
    out.write('        if (forward_disabled)\n')
    out.write('            return;\n')
    out.write('        pics_index += 1;\n')
    out.write('        el_container.style.backgroundImage = "url(" + pics[pics_index] + ")";\n')
    out.write('        if (pics.length == pics_index + 1) {\n')
    out.write('            forward_disabled = true;\n')
    out.write('            el_forward_arrow.style.opacity = "0.2";\n')
    out.write('            el_forward.style.cursor = "default";\n')
    out.write('        }\n')
    out.write('        if (backward_disabled) {\n')
    out.write('            backward_disabled = false;\n')
    out.write('            el_backward_arrow.style.opacity = "1.0";\n')
    out.write('            el_back.style.cursor = "pointer";\n')
    out.write('        }\n')
    out.write('    }, false);\n')
    out.write('}\n')
    out.write('var pics_index = 0;\n')
    out.write('var pics = ' + pics + ';\n')
    out.write('pics = pics.sort();\n')
    out.close()

def write_html():
    out = open("index.html", "w")
    out.write('<!DOCTYPE html>\n')
    out.write('<html lang="en">\n')
    out.write('<link rel="stylesheet" href="style.css">\n')
    out.write('<head>\n')
    out.write('    <meta charset="UTF-8">\n')
    out.write('    <title>Gallery</title>\n')
    out.write('    <script src="script.js"></script>\n')
    out.write('</head>\n')
    out.write('<body>\n')
    out.write('    <div class="whole_container">\n')
    out.write('        <div class="photo_container"></div>\n')
    out.write('        <div class="navigation">\n')
    out.write('            <div id="back" class="button">\n')
    out.write('                <svg id="svg3352" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="39.535" viewBox="0 0 63.992126 39.535435" width="63.992" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">\n')
    out.write('                 <metadata id="metadata3357">\n')
    out.write('                  <rdf:RDF>\n')
    out.write('                   <cc:Work rdf:about="">\n')
    out.write('                    <dc:format>image/svg+xml</dc:format>\n')
    out.write('                    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>\n')
    out.write('                    <dc:title/>\n')
    out.write('                   </cc:Work>\n')
    out.write('                  </rdf:RDF>\n')
    out.write('                 </metadata>\n')
    out.write('                 <g id="layer1" transform="translate(0,-9)">\n')
    out.write('                  <path id="backward_arrow" d="m63.992 24h-45v-15l-18.992 20.087 18.992 19.449v-14.535h45z" fill-rule="evenodd" fill="#800080"/>\n')
    out.write('                 </g>\n')
    out.write('                </svg>\n')
    out.write('            </div>\n')
    out.write('            <div id="forward" class="button">\n')
    out.write('                <svg id="svg3352" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="39.535" viewBox="0 0 63.992126 39.535435" width="63.992" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">\n')
    out.write('                 <metadata id="metadata3357">\n')
    out.write('                  <rdf:RDF>\n')
    out.write('                   <cc:Work rdf:about="">\n')
    out.write('                    <dc:format>image/svg+xml</dc:format>\n')
    out.write('                    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>\n')
    out.write('                    <dc:title/>\n')
    out.write('                   </cc:Work>\n')
    out.write('                  </rdf:RDF>\n')
    out.write('                 </metadata>\n')
    out.write('                 <g id="layer1" transform="translate(0,-9)">\n')
    out.write('                  <path id="forward_arrow" d="m0 24h45v-15l18.992 20.087-18.992 19.448v-14.535h-45z" fill-rule="evenodd" fill="#800080"/>\n')
    out.write('                 </g>\n')
    out.write('                </svg>\n')
    out.write('            </div>\n')
    out.write('        </div>\n')
    out.write('    </div>\n')
    out.write('</body>\n')
    out.write('</html>\n')
    out.close()

def main():
    pics = rotate()
    write_css()
    write_js(pics)
    write_html()

if __name__ == "__main__":
    main()